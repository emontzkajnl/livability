{"version":3,"file":"post-title/index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAe;AACf;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;ACNsD;AACjB;AAC6B;AAC9B;AAEpCA,oEAAiB,CAAEI,6CAAa,EAAE;EACjCE,IAAI,EAAE,QAAqC;IAAA,IAAnC;MAAEC,UAAU;MAAEC;IAAc,CAAC;IACpC,MAAMC,UAAU,GAAGP,sEAAa,EAAE;IAClC,OACC,kEAAC,6DAAQ,iFACHO,UAAU;MACf,OAAO,EAAC,IAAI;MACZ,KAAK,EAAGF,UAAU,CAACG,OAAS;MAC5B,QAAQ,EAAKA,OAAO,IAAMF,aAAa,CAAE;QAAEE;MAAQ,CAAC,CAAI;MACxD,WAAW,EAAGT,mDAAE,CAAE,eAAe;IAAI,GACpC;EAEJ,CAAC;EACDU,IAAI,EAAE,MAAM;IACX,OAAO,IAAI;EACZ;AACD,CAAC,CAAE,C","sources":["webpack://jci-blocks-v2/external window [\"wp\",\"blockEditor\"]","webpack://jci-blocks-v2/external window [\"wp\",\"blocks\"]","webpack://jci-blocks-v2/external window [\"wp\",\"element\"]","webpack://jci-blocks-v2/external window [\"wp\",\"i18n\"]","webpack://jci-blocks-v2/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://jci-blocks-v2/webpack/bootstrap","webpack://jci-blocks-v2/webpack/runtime/compat get default export","webpack://jci-blocks-v2/webpack/runtime/define property getters","webpack://jci-blocks-v2/webpack/runtime/hasOwnProperty shorthand","webpack://jci-blocks-v2/webpack/runtime/make namespace object","webpack://jci-blocks-v2/./src/post-title/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\nimport metadata from './block.json';\n\nregisterBlockType( metadata.name, {\n\tedit: ( { attributes, setAttributes } ) => {\n\t\tconst blockProps = useBlockProps();\n\t\treturn (\n\t\t\t<RichText\n\t\t\t\t{ ...blockProps }\n\t\t\t\ttagName=\"h1\"\n\t\t\t\tvalue={ attributes.content }\n\t\t\t\tonChange={ ( content ) => setAttributes( { content } ) }\n\t\t\t\tplaceholder={ __( 'Post Title...' ) }\n\t\t\t/>\n\t\t);\n\t},\n\tsave: () => {\n\t\treturn null;\n\t},\n} );\n"],"names":["registerBlockType","__","useBlockProps","RichText","metadata","name","edit","attributes","setAttributes","blockProps","content","save"],"sourceRoot":""}